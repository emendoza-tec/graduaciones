USE [ReqGraduaciones]
GO
PRINT('[dbo].[spReporteSabana]');
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Carlos Bernadac
-- Create date: 23/12/2022
-- Description: Reporte de SABANA
-- =============================================
ALTER PROCEDURE [dbo].[spReporteSabana](
	@UsuarioCampusSede UsuarioCampusSedeType READONLY,
	@UsuarioNivel UsuarioNivelType READONLY)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT  DISTINCT
		P.MATRICULA, 
		CONCAT(PE.NOMBRE, ' ', PE.APELLIDO_PATERNO, ' ',  PE.APELLIDO_MATERNO) AS NOMBRE_COMPLETO,
		--PA.DESC_PROGRAMA_ACADEMICO AS PROGRAMAACADEMICO, 
		PA.CLAVE_PROGRAMA_ACADEMICO,
		--P.MAJR_CODE AS CARRERAID, 
		--P.DESC_MAJR_CODE AS CARRERA,		
		dbo.fnConcentraciones_ObtenerConcentracionesAlumno(P.PIDM, 1) AS CONCENTRACION_UNO,
		dbo.fnConcentraciones_ObtenerConcentracionesAlumno(P.PIDM, 2) AS CONCENTRACION_DOS,
		dbo.fnConcentraciones_ObtenerConcentracionesAlumno(P.PIDM, 3) AS CONCENTRACION_TRES,
		CASE 
		 WHEN DA.CODIGO_DISTINCION IS NULL THEN ''
		 WHEN DA.CODIGO_DISTINCION = 'ULEAD' THEN 'SC'
		 ELSE 'NC' END AS ULEAD,
		CASE
		 WHEN DA.CODIGO_DISTINCION IS NULL THEN '' 
		 WHEN DA.CODIGO_DISTINCION != 'ULEAD' THEN 'SC'
		 ELSE 'NC' END AS DIPLOMA_INTERNACIONAL,
		PE.CLAVE_GENERO AS GENERO,
		PE.CLAVE_NACIONALIDAD_PRINCIPAL AS NACIONALIDAD,
		[dbo].[fnR_TELEFONO](P.PIDM) AS TELEFONO,
		[dbo].fnR_IDEN_CORREO_ELECTRONICO_ObtenCorreo(P.PIDM) AS CORREO,
		P.LAST_TERM_CURSADO AS PERIODO,
		DC.DESC_CAMPUS AS CAMPUS,
		NA.DESC_NIVEL_ACADEMICO AS NIVEL_ACADEMICO,
		P.[CREDITOS_PLAN] AS CREDITOS_PLAN,
		P.[CREDITOS_FALTANTES] AS CREDITOS_PENDIENTES,
		P.[CREDITOS_ACREDITADOS] AS CREDITOS_ACREDITADOS,
		P.[CREDITOS_FALTANTES] AS CREDITOS_FALTANTES,
		'' AS CREDITOS_PERIODO,
		ST.[TOTAL_SEMANAS_TEC18_ACREDITADAS] + ST.[TOTAL_SEMANAS_TEC_ACREDITADAS] AS SEMANAS_TEC,
		SS.HorasAcumuladas AS SERVICIO_SOCIAL_HT,
		CASE WHEN SS.HorasAcumuladas >= 480 THEN 'SC' ELSE 'NC' END AS SERVICIO_SOCIAL_ESTATUS,
		GNI.NIVEL_IDIOMA_REQ_GRAD AS EXAMEN_INGLES,
		GNI.IND_CUMPLE_REQUISITO_GRAD AS EXAMEN_INGLES_ESTATUS,
		'' AS EXAMEN_INGLES_FECHA,
		'' AS EXAMEN_INGLES_PUNTAJE,
		CASE WHEN CEN.PIDM IS NOT NULL THEN CEN.CLAVE_EXAMEN 
			 WHEN CEN_N.PIDM IS NOT NULL THEN CEN_N.CLAVE_EXAMEN 
			 ELSE ''
		END AS CENEVAL,
		CASE WHEN CEN.PIDM IS NOT NULL THEN 'SC'
			 WHEN CEN_N.PIDM IS NOT NULL THEN 'NC'
			 ELSE ''
		END  AS CENEVALE_ESTATUS,
		EI.ESTATUS AS EXAMEN_INTEGRADOR,
		GNI.NIVEL_IDIOMA_REQ_GRAD,
		'' AS IDIOMA_DIST_ESP,
		P.CREDITOS_CURSA_EXTRANJERO,
		'' AS PROMEDIO,
		P.FECHA_AUDITORIA AS FECHA_REGISTRO,
		P.CLAVE_ESTATUS_GRADUACION AS SHADEGR,
		APG.PeriodoCeremonia AS PERIODO_CEREMONIA
	FROM [Replicas].[dbo].[ALUMNOS_PROSP_CANDIDATOS] P
		LEFT JOIN [Replicas].[dbo].R_IDEN_PERSONA PE ON P.PIDM = PE.CLAVE_IDENTIDAD
		LEFT JOIN [Replicas].[dbo].PROGRAMA_ACADEMICO PA ON PA.CLAVE_PROGRAMA_ACADEMICO = P.CLAVE_PROGRAMA
		LEFT JOIN [Replicas].[dbo].[SPRIDEN] S ON [dbo].fnPIDM_MENTORES_ObtenPrimerValor(P.PIDM_MENTORES) = S.SPRIDEN_PIDM
		LEFT JOIN [Replicas].[dbo].[SPRIDEN] D ON P.PIDM_DIRECTOR = D.SPRIDEN_PIDM
		LEFT JOIN [Replicas].[dbo].R_IDEN_TELEFONO IT ON P.PIDM = IT.CLAVE_IDENTIDAD
		LEFT JOIN [Replicas].[dbo].[CAMPUS_SEDES] DC ON P.CLAVE_CAMPUS  = DC.CLAVE_CAMPUS
		LEFT JOIN [Replicas].[dbo].[CAMPUS_SEDES] DS ON DC.CLAVE_TIPO_SEDE = DS.CLAVE_TIPO_SEDE
		LEFT JOIN [Replicas].[dbo].DIM_R_ESCO_NIVEL_ACADEMICO NA ON NA.CLAVE_NIVEL_ACADEMICO = P.NIVEL_ACADEMICO
		LEFT JOIN [dbo].ExamenIntegrador EI ON EI.MATRICULA = P.MATRICULA 
		LEFT JOIN [Replicas].[dbo].GRADUADOS_NIVEL_INGLES GNI ON GNI.MATRICULA = P.MATRICULA
		LEFT JOIN [dbo].[AlumnosPeriodoGraduacion] APG ON APG.Matricula = P.MATRICULA AND APG.Estatus = 1
		LEFT JOIN [Replicas].[dbo].[SEMANAS_TEC] ST ON P.PIDM = ST.PIDM
		LEFT JOIN [Replicas].[dbo].[CENEVAL_ACREDITADO] CEN ON P.PIDM = CEN.PIDM
		LEFT JOIN [Replicas].[dbo].[CENEVAL_NO_ACREDITADO] CEN_N ON P.PIDM = CEN_N.PIDM
		LEFT JOIN [Replicas].[dbo].[ALUMNOS_SS] SS ON P.PIDM = SS.PIDM
		LEFT JOIN [Replicas].[dbo].[DISTINCIONES_ACADEMICAS] DA ON P.PIDM = DA.PIDM
	WHERE 
		((SELECT COUNT(ClaveCampus) FROM @UsuarioCampusSede) = 0 OR P.CLAVE_CAMPUS  IN (SELECT DISTINCT ClaveCampus FROM @UsuarioCampusSede))
		AND ((SELECT COUNT(ClaveSede) FROM @UsuarioCampusSede) = 0 OR  DC.CLAVE_TIPO_SEDE IN (SELECT ClaveSede FROM @UsuarioCampusSede))
		AND ((SELECT COUNT(ClaveNivel) FROM @UsuarioNivel) = 0 OR  P.NIVEL_ACADEMICO IN (SELECT ClaveNivel FROM @UsuarioNivel))
END

